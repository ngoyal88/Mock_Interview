[
  {
    "id": "1",
    "title": "Two Sum",
    "difficulty": "easy",
    "description": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.",
    "examples": [
      { "input": "nums = [2,7,11,15], target = 9", "output": "[0,1]" }
    ],
    "testCases": [
      { "input": "2 7 11 15\n9", "expected": "0 1" },
      { "input": "3 2 4\n6", "expected": "1 2" },
      { "input": "3 3\n6", "expected": "0 1" }
    ],
    "starterCode": {
      "python": "def two_sum(nums, target):\n    # Your code here\n    pass",
      "javascript": "function twoSum(nums, target) {\n  // Your code here\n}",
      "cpp": "#include <vector>\nstd::vector<int> twoSum(std::vector<int>& nums, int target) {\n  // Your code here\n}"
    }
  },
  {
    "id": "2",
    "title": "Reverse a String",
    "difficulty": "easy",
    "description": "Write a function that reverses a string. The input string is given as a single line.",
    "examples": [
      { "input": "hello", "output": "olleh" }
    ],
    "testCases": [
      { "input": "hello", "expected": "olleh" },
      { "input": "abc", "expected": "cba" },
      { "input": "a", "expected": "a" }
    ],
    "starterCode": {
      "python": "def reverse_string(s):\n    # Your code here\n    pass",
      "javascript": "function reverseString(s) {\n  // Your code here\n}",
      "cpp": "#include <string>\nstd::string reverseString(std::string s) {\n  // Your code here\n}"
    }
  },
  {
    "id": "3",
    "title": "Check Palindrome",
    "difficulty": "easy",
    "description": "Given a string, return true if it is a palindrome, otherwise false.",
    "examples": [
      { "input": "racecar", "output": "true" },
      { "input": "hello", "output": "false" }
    ],
    "testCases": [
      { "input": "racecar", "expected": "true" },
      { "input": "hello", "expected": "false" },
      { "input": "madam", "expected": "true" }
    ],
    "starterCode": {
      "python": "def is_palindrome(s):\n    # Your code here\n    pass",
      "javascript": "function isPalindrome(s) {\n  // Your code here\n}",
      "cpp": "#include <string>\nbool isPalindrome(std::string s) {\n  // Your code here\n}"
    }
  }
]
